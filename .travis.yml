language: python
python:
  - "3.9"
  - "3.8"
  - "3.7"
env:
  global:
    - TOX_SKIP_ENV=.+(docker|lock)
    - tf_version=1.0.0
    - helm_version=3.3.4
    - UNFURL_LOGGING=info
before_install:
  - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - unzip terraform_"$tf_version"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$tf_version"_linux_amd64.zip
  - wget https://get.helm.sh/helm-v"$helm_version"-linux-amd64.tar.gz
  - tar -zxvf helm-v"$helm_version"-linux-amd64.tar.gz
  - sudo mv linux-amd64/helm /usr/local/bin/helm
  - wget https://storage.googleapis.com/kubernetes-release/release/v1.17.14/bin/linux/amd64/kubectl
  - wget https://github.com/rancher/k3d/releases/download/v3.4.0/k3d-linux-amd64
  - chmod +x k3d-linux-amd64 kubectl
  - sudo mv k3d-linux-amd64 /usr/local/bin/k3d
  - sudo mv kubectl /usr/local/bin
install: pip install tox-travis
script:
  - k3d cluster create
  - kubectl get node
  - k3d kubeconfig merge --all -d
  - kubectl config view
  - tox -- -s
jobs:
  include:
    - stage: deploy # only run after test jobs complete
      if: branch == master OR tag =~ /^\d+\.\d+\.\d+$/
      python: 3.9
      script: # build, tag and push to docker hub
       - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USER" --password-stdin
       - docker build -t "onecommons/unfurl:${TRAVIS_TAG:-$TRAVIS_COMMIT}" -f ./docker/Dockerfile .
       - docker push onecommons/unfurl:${TRAVIS_TAG:-$TRAVIS_COMMIT}
      deploy:
        on:
          all_branches: true
          condition: $TRAVIS_TAG =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,4}$
        provider: pypi
        username: __token__
        password: $PYPI_TOKEN
        edge: true # opt in to dpl v2
        distributions: "sdist bdist_wheel"
        skip_existing: true
      after_deploy:
        - docker tag "onecommons/unfurl:${TRAVIS_TAG:-$TRAVIS_COMMIT}" onecommons/unfurl:latest
        - docker push onecommons/unfurl:latest
