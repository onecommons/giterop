# Requirements:

# - source -> artifact
# - compute (ec2 / gcp / kubernetes )
# - MongoDB (self-hosted / amazon / atlas)
# - dns (route53 / godaddy / googledns )

# Resource templates:

# * compute
# - Amazon EC2
# - GCP

# * MongoDB:
# - Self-hosted
# - Amazon DocumentDB
# - MongoDB Atlas service

apiVersion: unfurl/v1alpha1
kind: Ensemble
spec:
  inputs:
      # added to cloud init
    env_url: {get_env: CI_API_URL}
    env_token: {get_env: CI_TOKEN}
    image: {get_env: CI_REGISTRY_IMAGE}
    domain: foo.com

  instances:
    foo.com:
      template: foo.com-zone

    # the_app:
    #   template: the_app

  service_template:
    imports:
    - repository: unfurl
      file: tosca_plugins/googlecloud.yaml

    node_types:
      Base:
        derived_from: tosca.nodes.Root
        interfaces:
          Standard:
            configure: echo "configured"

      Compute:
        derived_from: Base
        metadata:
          badge: COMPUTE
        properties:
          CPUs:
            type: integer
          Memory:
            type: number
          storage:
            type: number

      AWSInstance:
        derived_from: [Compute, unfurl.nodes.AWSResource]

      GCPInstance:
        derived_from: [Compute, unfurl.nodes.GoogleCloudObject]

      MongoDb:
        derived_from: Base
        metadata:
          badge: Database
        interfaces:
          Install:
            operations:
              connect: dummy
        requirements:
        - host:
            node: Base

      Atlas:
        derived_from: MongoDb
        properties:
          login:
            type: string
          password:
            metadata:
              sensitive: true
            type: string
        requirements:
        - host:
            occurrences: [0, 0]

      SelfHostedMongoDb:
        derived_from: MongoDb
        requirements:
        - host: Compute
        interfaces:
          Install:
            operations:
              connect: not_implemented

      DNS:
        derived_from: Base
        description: DNS provider for domain name configuration
        metadata:
          badge: DNS
        attributes:
          console_url:
            type: string
            default: https://console.dns.com?zone={{ TOPOLOGY.inputs.domain }}
            metadata:
              export: true

      Mail:
        derived_from: Base
        description: Mail server to use for sending mail (optional)
        metadata:
          title: Mail Server
          badge: MAIL

      DockerHost:
        derived_from: Compute

      MEANStack:
        derived_from: Base
        properties:
          image:
            type: string
          domain:
            type: string
        requirements:
        - host:
            description: A compute instance with at least 512MB RAM
            node: Compute
        - resolver:
            node: DNS
        - db:
            node: MongoDb
            description: MongoDB database service
        - mail:
            node: Mail


    topology_template:
      inputs:
        domain:
          type: string
          description: the domain

      substitution_mappings:
          node: the_app

      node_templates:
        +include: include-json.json#/ResourceTemplate
        foo.com-zone:
          type: DNS
          properties:
            domain: foo.com
