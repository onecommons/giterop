tosca_definitions_version: tosca_simple_unfurl_1_0_0
imports:
  # test fragment resolution
  - local-template.yaml#/types/A

repositories:
  spec:
    url: file:.
  imported-repo:
    url: file:.
  almost-an-url:
    url: git@github.com:onecommons/unfurl.git
node_types:
  Test:
    derived_from: tosca.nodes.Root
    properties:
      defaultexpession:
        type: string
        default:
          eval:
            python: configurators.py#expressionFunc
            args: default_foo
    artifacts:
      my_file_artifact: ../my_apps_files/operation_artifact.txt
topology_template:
  node_templates:
    nodeTest:
      type: Test
      artifacts:
        another: foo.txt
  workflows:
      deploy:
        preconditions: # should be true
          - target: gitlab-release
            condition:
              - release-name: [{equal: foo}]
        steps:
          shouldbeSkipped:
            target: unfurl.nodes.HelmRelease
            filter:
              - and:
                - missingAttribute: [{equal: foo}]
            activities:
              - call_operation: unfurl.interfaces.install.Helm.execute
          helm:
            target: unfurl.nodes.HelmRelease
            activities:
               - call_operation:
                    operation: unfurl.interfaces.install.Helm.execute
                    inputs:
                      helmcmd: '{{ "update" if task.reason == "update" else "install"}}'
               - inline: discover
      undeploy:
        steps:
          helm:
            target: unfurl.nodes.HelmRelease
            activities:
               - call_operation: unfurl.interfaces.install.Helm.remove
               - inline: discover
      discover:
        steps:
          helm:
            target: unfurl.nodes.HelmRelease
            activities:
               - call_operation: unfurl.interfaces.install.Helm.discover
