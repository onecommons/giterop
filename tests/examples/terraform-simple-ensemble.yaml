apiVersion: unfurl/v1alpha1
kind: Ensemble
spec:
  service_template:
    imports:
      - repository: unfurl
        file: tosca_plugins/artifacts.yaml

    node_types:
      # defines a type of resource that is managed (create/update/delete) by a terraform resource
      GenericTerraformManagedResource:
        derived_from: unfurl.nodes.Installer.Terraform
        properties:
          tag:
            type: string
            metadata:
              # This declares that this property will set as a terraform variable with the same name:
              tfvar: true
        attributes:
          test_output:
            type: string
            metadata:
              # This declares that this attribute will be set to the terraform output with the same name:
              tfoutput: true
        interfaces:
          defaults:
            inputs:
              main: { get_env: terraform_dir }
          Standard:
            configure:
            delete:

      TerraformWithResultTemplate:
        derived_from: unfurl.nodes.Installer.Terraform
        properties:
          test:
            type: string
            default:
              eval: ::missing
        interfaces:
          defaults:
            inputs:
              main: { get_env: terraform_dir }
              tfvars:
                tag: "result template test"
          Standard:
            operations:
              delete:
              configure:
                inputs:
                  # test that properties are treated like attributes after they are modified
                  resultTemplate:
                    attributes:
                      test: "{{ outputs.test_output }}"
                outputs:
                  test_output:

    topology_template:
      node_templates:
        result-template-test:
          type: TerraformWithResultTemplate

        terraform-node:
          type: GenericTerraformManagedResource
          properties:
            tag: test2

        terraform-node-json:
          type: unfurl.nodes.Installer.Terraform
          # will look in spec/terraform-node for tf files by default
          interfaces:
            defaults:
              outputs:
                test_output:
              inputs:
                main: { get_env: terraform_dir }
                tfvars:
                  tag: "test3"
            Standard:
              operations:
                configure:

        example:
          type: unfurl.nodes.Installer.Terraform
          interfaces:
            defaults:
              outputs:
                tag: tag
              inputs:
                # test with strings instead of maps
                tfvars: |
                  tag = "test"
                main: |
                  terraform {
                    required_version = ">= 0.12.26"
                  }

                  variable "tag" {
                    type        = string
                  }

                  resource "null_resource" "null" {
                  }

                  output "tag" {
                    value = "Hello, ${var.tag}!"
                  }
            Standard:
              operations:
                configure:
